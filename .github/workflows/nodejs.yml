name: Test CI

on: [push, pull_request]

jobs:
  lint:
    name: Lint source code
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 🛎
      uses: actions/checkout@v2
    - name: Choose reporter for ReviewDog 🚦
      uses: haya14busa/action-cond@v1
      id: reporter
      with:
        cond: github.event_name == 'pull_request'
        if_true: github-pr-review
        if_false: github-check
    - name: Run ESlint 🧹
      uses: reviewdog/action-eslint@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        eslint_flags: --ext '.js' --ext '.ts' --ext '.tsx' .
        reporter: ${{ steps.reporter.outputs.value }}
      env:
        NODE_OPTIONS: '--max-old-space-size=8192'
        CYPRESS_INSTALL_BINARY: 0

  type_check:
    name: Check static types
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 🛎
      uses: actions/checkout@v2
    - name: Install NPM dependencies 📦
      uses: bahmutov/npm-install@v1
      env:
        CYPRESS_INSTALL_BINARY: 0
    - name: Check types 🧩
      uses: icrawl/action-tsc@v1

  test-unit:
    name: Run unit, smoke and integration tests
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    needs: [lint, type_check]
    env:
      CYPRESS_INSTALL_BINARY: 0
      CI: true
      SKIP_PREFLIGHT_CHECK: true
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v2
      - name: Install NPM dependencies 📦
        uses: bahmutov/npm-install@v1
      - name: Run tests 🧪
        run: yarn test --coverage
      - name: Run smoke tests 💨
        run: yarn storybook --smoke-test
      - name: Set code coverage commit status 📫
        if: github.event_name == 'pull_request'
        uses: slavcodev/coverage-monitor-action@1.1.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          clover_file: coverage/clover.xml
          threshold_alert: 50
          threshold_warning: 80
      # Save code coverage report
      # See https://github.com/actions/upload-artifact
      - name: Upload code coverage ⬆️
        uses: actions/upload-artifact@v2
        with:
          name: Code coverage
          path: coverage

  test-e2e:
    name: Run end-to-end tests
    runs-on: ubuntu-16.04
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    needs: [lint, type_check]
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v2
      - name: Run Cypress tests 🌲
        uses: cypress-io/github-action@v2
        timeout-minutes: 10
        with:
          build: yarn build
          start: npx superstatic build -p 3000
          wait-on: 'http://localhost:3000'
      - name: Upload screenshots on failure 🎞️
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: Cypress screenshots & videos
          path: |
            cypress/screenshots
            cypress/videos

  visual-regression:
    name: Run visual regression tests
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    needs: [lint, type_check]
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v2
      - name: Install NPM dependencies 📦
        uses: bahmutov/npm-install@v1
        env:
          CYPRESS_INSTALL_BINARY: 0
      - name: Build the storybook 🏗
        run: yarn build-storybook
      - name: Run loki 🔍
        run: yarn loki test --requireReference --reactUri file:./storybook-static --chromeTolerance 10
      - name: Generate visual regression reporter 📝
        if: always()
        run: |
          node bin/generate-visual-json-report.js
          yarn reg-cli --from .loki/report.json --report .loki/report.html
      - name: Upload screenshots with differences 📸
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: current and difference
          path: |
            .loki/current
            .loki/difference
            .loki/report.json
            .loki/report.html
