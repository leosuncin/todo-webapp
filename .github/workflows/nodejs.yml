name: Test CI

on: [push, pull_request]

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
    # Install Node.js
    # https://github.com/actions/setup-node
    - uses: actions/checkout@v1
    - name: Use Node.js latest
      uses: actions/setup-node@v1
      with:
        node-version: latest
    # Restore the previous yarn cache directory
    # See https://github.com/actions/cache
    - uses: actions/cache@v1
      name: Cache dependencies
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-
    # Restore cypress binary from cache
    - name: Cache Cypress binary
      uses: actions/cache@v1
      with:
        path: ~/.cache/Cypress
        key: cypress-${{ runner.os }}-cypress-${{ hashFiles('**/package.json') }}
        restore-keys: |
          cypress-${{ runner.os }}-cypress-
    # Restore node_modules
    - name: Cache local node_modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-
    # Install
    - name: Install project dependencies
      env:
        CI: true
      run: |
        npm ci
        npx cypress verify
  test-unit:
    name: Run unit, smoke and integration tests
    needs: [install]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js latest
        uses: actions/setup-node@v1
        with:
          node-version: latest
      - uses: actions/cache@v1
        name: Cache dependencies
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      # Restore cypress binary from cache
      - name: Cache Cypress binary
        uses: actions/cache@v1
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-
      # Restore node_modules
      - name: Cache local node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      - name: Run tests
        env:
          CI: true
        run: |
          yarn test --coverage
          yarn storybook --smoke-test
      # Save code coverage report
      # See https://github.com/actions/upload-artifact
      - uses: actions/upload-artifact@v1
        with:
          name: Code coverage
          path: coverage
  test-e2e:
    name: Run end-to-end tests
    needs: [install]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js latest
        uses: actions/setup-node@v1
        with:
          node-version: latest
      - uses: actions/cache@v1
        name: Cache dependencies
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      # Restore cypress binary from cache
      - name: Cache Cypress binary
        uses: actions/cache@v1
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-
      # Restore node_modules
      - name: Cache local node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      - name: Run tests
        env:
          CI: true
          TERM: xterm
        run: yarn test:e2e
      # Save screenshots if fail
      # See https://github.com/actions/upload-artifact
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: screenshots
          path: cypress/screenshots
      - uses: actions/upload-artifact@v1
        with:
          name: videos
          path: cypress/videos
